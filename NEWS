Overview of Changes in spectmorph-0.2.0:

* implemented user defined morphing using a MorphPlan consisting of operators
  - graphical representation of the operators
  - graphical editing of the MorphPlan
  - implement actual morphing (in per-operator per-voice module object)
  - added MorphPlanSynth/MorphPlanVoice, which allow running MorphPlan's easily
  - added LPC (linear prediction) during encoding, and LPC/LSF based morphing
* BEAST plugin:
  - added GUI required for editing a MorphPlan
  - support four output channels, as well as twc control inputs
  - delay compensation plugin (to compensate SpectMorph delay)
* JACK client:
  - support GUI MorphPlan editing
* added sminspector (graphical tool for displaying SpectMorph instruments)
  - zoomable time/frequency view
  - configurable (FFT/CWT/LPC) time/frequency view transform parameters
  - spectrum, sample, LPC visualization
  - graphical loop point editing
  - allow storing changes in .smset files (for editing loop points)
  - play support via JACK
* improved smtool (old name: smextract); its now installed by default
  - lots of new commands (like "total-noise", "auto-volume", ...)
  - support .smset as input (in addition to .sm); command is executed on all
    .sm files in the .smset
* added shared libraries for gui and jack code
* new integrated memory leak debugger (to find missing delete's)
* support ping-pong loops
* doxygen API docs updates
* migrated man pages from Doxer to testbit.eu wiki (and use wikihtml2man.py)
* performance improvements

Overview of Changes in spectmorph-0.1.1:

* added tool for SoundFont (SF2) import: smsfimport
* file format changes
  - allow time index based loops (required for looped SoundFont presets)
  - allow stereo (multichannel) files in WavSets
  - store phase and magnitude seperately (instead of a sin+cos magnitude)
  - support multiple velocity layers
  - allow storing the original sample data for quality comparisions
  - optimize storage size for smset files if the same Audio file is reused more
    than once
* switch to 32 values for 32 perceptually spaced noise bands, instead of the old
  noise representation
* handle stereo (multichannel) files in smenc, smjack and beast plugin
* performance optimizations
  - LiveDecoder is now really fast, and can handle highly polyphonic synthesis in RT
  - sine synthesis is based on IFFT now
  - noise synthesis is a lot faster, too
  - where possible, use SSE operations in performance critical code
  - use FFTW for FFT, which is faster than gslfft
  - added fast float->int conversion on x86
  - smjack is a lot faster, now
* removed smenc -O2 setting, which was too slow for practical use
* introduced anti-alias filter in LiveDecoder
* cleanups, refactoring, bugfixes

Overview of Changes in spectmorph-0.1.0:

* file format changes
  - instruments based on more than one sample can be shipped as one single file
  - various performance optimizations
  - store data as little endian (since this is more likely to be the host endianness)
  - broken files or old files can be recognized and rejected
* automated tuning algorithm (smextract auto-tune)
* supported looping (for playing notes that is longer than original sample)
* added beast plugin for playing SpectMorph instruments
* added jack client for playing SpectMorph instruments
* added zero padding before start of a sample to get better initial frames
* compile with -Wall
* allow single file argument for smenc (output filename will be constructed with .sm extension)
* support setting smplay decoder mode via command line parameter
* refactoring, cleanups

Overview of Changes in spectmorph-0.0.3:

* added encoder algorithm to find attack envelope, this makes piano sound much
  more realistic
* introduced smwavset tool, which allows managing instruments consisting of
  many samples
  - encoding/decoding a set of samples
  - delta operation for comparing errors of sets of samples
* smextract can now provide an overview of how many bytes in an .sm file can be
  attributed to which fields
* documentation updates
* refactoring, cleanups

Overview of Changes in spectmorph-0.0.2:

* bugfixes
* include proper phases, so phase-correct reconstruction of samples is possible
* new programs:
  - smstrip     - removes debugging information from SpectMorph model files
  - smextract   - extracts data from SpectMorph models, for developers only for now
* added --no-noise / --no-sines switches for smplay
* added -s switch for smenc, to create stripped models
* use boost numeric bindings + lapack for ideal phase/magnitude estimation (smenc -O2) - slow!
* SSE optimizations and other speedups for fast phase/magnitude estimation (smenc -O1)
* use odd/centered FFT to be able to reconstruct phases from FFT data  (smenc -O0)
* use different thresholding scheme for encoder, detecting more partials
* document API with doxygen
* move Encoder and other classes to libspectmorph
* added python binding, capable of reading SpectMorph model files
* added automated tests
* added manual pages for smenc, smplay, smvisualize and smstrip
* added overview document in docs directory

Overview of Changes in spectmorph-0.0.1:

* initial public release with three programs
  - smenc       - builds model of a sample
  - smplay      - resynthesizes sample from model
  - smvisualize - visualizes model
