smenc:
- transient representation
- compute peak over nearest minimum in dB
- compute peak over local (frame) maximum in dB
- move debugging information generated with -d to main file
- normalize noise
- use averaging to estimate noise
- make window function configurable
- debug performance problems
  => implement downsampling for really low notes      [0.0.2]
  => use symmetry to speed up optimize_partials       [0.0.2]
  => make a squared window table (optimize_partials)  [0.0.2]
- move partial tracking from decoder to encoder
- use GPU for linear least squares
- move smmath.hh code to libbse

refactoring:
- make load() and save() methods of SpectMorph::Audio
- try to refactor SpectMorph::Frame into something less duplicating
- possibly rename SpectMorph::Audio to SpectMorph::Model
- simplify Encoder API

python:
- add api which is good enough to implement smabc in python
- http://docs.python.org/c-api/typeobj.html
- http://docs.python.org/c-api/typeobj.html#sequence-object-structures

smlive:
- implement efficient (IFFT) live decoder   [0.0.3]

tests:
- add test cases

lag diagrams of note start

adventure:
- implement wav->midi
  * trumpet (silent brass)
  * piano

docs:
- write document documenting basic functionality  [0.0.2]

evaluation:
- reevaluate [0.0.2]

samples:
- test with samples from the net

debian:
- package boost-numeric-bindings
