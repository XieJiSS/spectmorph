release:
- fix post-end access for noise for smplay

smenc:
- move partial pruning step to seperate step to be performed after attack optimization
- merge new-pruning-scaling branch somehow
- implement phase-correct "nearest frame" decoding instead of overlap-adding frames
- compute peak over nearest minimum in dB
- compute peak over local (frame) maximum in dB
- normalize noise
- make window function configurable
- debug performance problems
  => implement downsampling for really low notes
  => use symmetry to speed up optimize_partials
  => make a squared window table (optimize_partials)
- move smmath.hh code to libbse
- implement sinc interpolation for spectrum phase
- make load() function of SpectMorph::Audio and SpectMorph::WavSet reset state
- optimize memory usage of encoder
- reanalyze residual after first pass
- increase time resolution for residual for low notes
- use NoiseBandPartition class to get faster noise band splitting
- adjust noise bands according to frequency specs

refactoring:
- possibly rename SpectMorph::Audio to SpectMorph::Model
- simplify Encoder API

python:
- add api which is good enough to implement smabc in python
- http://docs.python.org/c-api/typeobj.html
- http://docs.python.org/c-api/typeobj.html#sequence-object-structures

smlive:
- use faster random number generation
- noise masking (no noise resynthesis if its inaudible anyway)
- make FFTW integration thread safe
- use fast ftoi() for processors that require it (x86)
- maybe use integer phase representation (-> less floor()/float->int/int->float cycles)

tests:
- add test cases
- add deterministic random to noise decoder for tests

lag diagrams of note start

adventure:
- implement wav->midi
  * trumpet (silent brass)
  * piano

samples:
- test with samples from the net
- write automatic cutter for IMIS samples
- preserve microintonanation by using ping pong loops
- write sf2 to smset converter

documentation:
- update API documentation with new classes (LiveDecoder, GenericIn*)

BEAST:
- midi export
